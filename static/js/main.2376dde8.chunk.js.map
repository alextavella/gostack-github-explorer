{"version":3,"sources":["assets/logo.svg","assets/bg.svg","components/Logo/index.tsx","config/data.ts","services/api.ts","pages/Dashboard/styles.tsx","pages/Dashboard/index.tsx","pages/Repository/styles.tsx","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Logo","src","logo","alt","title","name","full_name","description","owner","login","avatar_url","api","axios","create","baseURL","styled","div","Title","h2","Form","form","props","hasError","css","shade","Error","span","Repositories","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","repos","localStorage","getItem","dataConfig","local","JSON","parse","Array","isArray","repositories","setRepositories","e","a","preventDefault","repo","find","r","repoIndex","findIndex","splice","get","response","data","useEffect","setItem","stringify","onSubmit","type","value","onChange","target","toLowerCase","placeholder","map","repository","key","to","size","Header","header","RepositoryInfo","section","Issues","Respository","params","useRouteMatch","setRepository","issues","setIssues","Promise","all","loadData","console","log","className","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","user","Routes","path","component","exact","createGlobalStyle","bg","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2376dde8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.0b819d63.svg\";","import React from 'react';\nimport logo from '../../assets/logo.svg';\n\nconst Logo = () => {\n  return <img src={logo} alt=\"Github Explorer\" title=\"Github Explorer\" />;\n};\n\nexport default Logo;\n","export default {\n  key: '@GithubExplore:repositories',\n  data: [\n    {\n      name: 'vuejs/vue',\n      full_name: 'vuejs/vue',\n      description:\n        'ðŸ–– Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.',\n      owner: {\n        login: 'vuejs',\n        avatar_url: 'https://avatars1.githubusercontent.com/u/6128107?v=4',\n      },\n    },\n    {\n      name: 'angular/angular',\n      full_name: 'angular/angular',\n      description: 'One framework. Mobile & desktop.',\n      owner: {\n        login: 'angular',\n        avatar_url: 'https://avatars3.githubusercontent.com/u/139426?v=4',\n      },\n    },\n    {\n      name: 'facebook/react',\n      full_name: 'facebook/react',\n      description:\n        'A declarative, efficient, and flexible JavaScript library for building user interfaces.',\n      owner: {\n        login: 'facebook',\n        avatar_url: 'https://avatars3.githubusercontent.com/u/69631?v=4',\n      },\n    },\n  ],\n};\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Container = styled.div`\n  width: 500;\n  display: flex;\n  align-items: true;\n`;\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  color: #3a3a3a;\n  line-height: 56px;\n  max-width: 450px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 50px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 2px solid #fff;\n    border-right: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: red;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    color: #fff;\n    font-weight: bold;\n\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      color: #cbcbd6;\n      margin-left: auto;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport Logo from '../../components/Logo';\nimport dataConfig from '../../config/data';\nimport api from '../../services/api';\nimport { Error, Form, Repositories, Title } from './styles';\n\ninterface Repository {\n  name?: string;\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState<string>('');\n\n  const [inputError, setInputError] = useState<string>('');\n\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const repos = localStorage.getItem(dataConfig.key);\n\n    if (repos) {\n      const local = JSON.parse(repos);\n      if (Array.isArray(local)) {\n        return local;\n      }\n    }\n\n    return dataConfig.data;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(dataConfig.key, JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(\n    e: React.FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    e.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositÃ³rio');\n      return;\n    }\n\n    const repo = repositories.find((r) => r.name === newRepo);\n    if (repo) {\n      const repoIndex = repositories.findIndex((r) => r.name === newRepo);\n      repositories.splice(repoIndex, 1);\n\n      setRepositories([repo, ...repositories]);\n\n      setInputError('');\n      setNewRepo('');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`/repos/${newRepo}`);\n      const {\n        full_name,\n        description,\n        owner: { login, avatar_url },\n      } = response.data;\n\n      const repository = {\n        name: newRepo,\n        full_name,\n        description,\n        owner: { login, avatar_url },\n      };\n\n      setRepositories([repository, ...repositories]);\n      setInputError('');\n    } catch (e) {\n      setInputError('Error ao pesquisar repositÃ³rios');\n    } finally {\n      setNewRepo('');\n    }\n  }\n\n  return (\n    <>\n      <Logo />\n      <Title>Explore repositÃ³rios no Github</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          type=\"text\"\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value.toLowerCase())}\n          placeholder=\"Digite o nome do repositÃ³rio\"\n        />\n        <button type=\"submit\" title=\"Pesquisar repositÃ³rio\">\n          Pesquisar\n        </button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link key={repository.full_name} to={`/repo/${repository.full_name}`}>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    font-size: 14px;\n    color: #a8a9b3;\n\n    transition: color 0.2s;\n\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4b;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    list-style: none;\n    display: flex;\n    margin-top: 40px;\n\n    > li {\n      & + li {\n        margin-left: 20px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n\n      &.stars > strong,\n      &.stars > span {\n        color: #fde200;\n      }\n\n      &.forks > strong,\n      &.forks > span {\n        color: #3c96d4;\n      }\n\n      &.issues > strong,\n      &.issues > span {\n        color: #e5433d;\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin-left: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      color: #cbcbd6;\n      margin-left: auto;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Logo from '../../components/Logo';\nimport api from '../../services/api';\nimport { Header, Issues, RepositoryInfo } from './styles';\n\ninterface RepoParams {\n  name: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: string;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Respository: React.FC = () => {\n  const { params } = useRouteMatch<RepoParams>();\n\n  const [repository, setRepository] = useState<Repository>();\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  useEffect(() => {\n    async function loadData(): Promise<void> {\n      const [repo, issues] = await Promise.all([\n        api.get<Repository>(`/repos/${params.name}`),\n        api.get<Issue[]>(`/repos/${params.name}/issues`),\n      ]);\n\n      setRepository(repo.data);\n      setIssues(issues.data);\n    }\n\n    try {\n      loadData();\n    } catch {\n      console.log('Erro ao carregar dados do repositÃ³rio');\n    }\n  }, [params]);\n\n  return (\n    <>\n      <Header>\n        <Logo />\n        <Link to=\"/\" title=\"Voltar\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li className=\"stars\">\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li className=\"forks\">\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li className=\"issues\">\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map((issue) => (\n          <a key={issue.id} href={issue.html_url} title={issue.title}>\n            <>\n              <div>\n                <strong>{issue.title}</strong>\n                <p>{issue.user.login}</p>\n              </div>\n              <FiChevronRight size={20} />\n            </>\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Respository;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from '../pages/Dashboard';\nimport Respository from '../pages/Repository';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} exact />\n      <Route path=\"/repo/:name+\" component={Respository} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport bg from '../assets/bg.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${bg}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}