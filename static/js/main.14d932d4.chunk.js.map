{"version":3,"sources":["assets/logo.svg","assets/bg.svg","services/api.ts","pages/Dashboard/styles.tsx","pages/Dashboard/index.tsx","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","styled","div","Title","h2","Form","form","props","hasError","css","shade","Error","span","Repositories","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","repos","localStorage","getItem","JSON","parse","repositories","setRepositories","e","a","preventDefault","repo","find","r","name","repoIndex","findIndex","splice","get","response","data","full_name","description","owner","login","avatar_url","useEffect","setItem","stringify","src","logo","alt","onSubmit","value","onChange","target","placeholder","type","map","repository","key","href","size","Respository","Routes","path","component","exact","createGlobalStyle","bg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,yMCM5BC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2B,0/DCIcC,IAAOC,IAAV,KAAf,IAMMC,EAAQF,IAAOG,GAAV,KAQLC,EAAOJ,IAAOK,KAAV,KAeX,SAACC,GAAD,OACAA,EAAMC,UACNC,YADA,OAsBcC,YAAM,GAAK,YAKlBC,EAAQV,IAAOW,KAAV,KAMLC,EAAeZ,IAAOC,IAAV,KC4CVY,EA/Fa,WAAO,IAAD,EACFC,mBAHJ,sCAEM,mBACzBC,EADyB,KAChBC,EADgB,OAGIF,mBAAiB,IAHrB,mBAGzBG,EAHyB,KAGbC,EAHa,OAKQJ,oBAAuB,WAC7D,IAAMK,EAAQC,aAAaC,QATN,+BAUrB,OAAOF,EAAQG,KAAKC,MAAMJ,GAAS,MAPL,mBAKzBK,EALyB,KAKXC,EALW,iDAchC,WACEC,GADF,+BAAAC,EAAA,yDAGED,EAAEE,iBAEGb,EALP,uBAMIG,EAAc,yCANlB,+BAUQW,EAAOL,EAAaM,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAASjB,MAVnD,wBAYUkB,EAAYT,EAAaU,WAAU,SAACH,GAAD,OAAOA,EAAEC,OAASjB,KAC3DS,EAAaW,OAAOF,EAAW,GAE/BR,EAAgB,CAACI,GAAF,mBAAWL,KAE1BN,EAAc,IACdF,EAAW,IAlBf,sDAuB2BpB,EAAIwC,IAAJ,iBAA8BrB,IAvBzD,QAuBUsB,EAvBV,SA4BQA,EAASC,KAHXC,EAzBN,EAyBMA,UACAC,EA1BN,EA0BMA,YA1BN,IA2BMC,MAASC,EA3Bf,EA2BeA,MAAOC,EA3BtB,EA2BsBA,WAUlBlB,EAAgB,CAPG,CACjBO,KAAMjB,EACNwB,YACAC,cACAC,MAAO,CAAEC,QAAOC,gBAGH,mBAAiBnB,KAChCN,EAAc,IAtClB,mDAwCIA,EAAc,sCAxClB,yBA0CIF,EAAW,IA1Cf,+EAdgC,sBA4DhC,OAlDA4B,qBAAU,WACRxB,aAAayB,QAdQ,8BAckBvB,KAAKwB,UAAUtB,MACrD,CAACA,IAiDF,oCACE,yBAAKuB,IAAKC,IAAMC,IAAI,oBACpB,kBAAC/C,EAAD,4CAEA,kBAACE,EAAD,CAAMG,WAAYU,EAAYiC,SAjEF,6CAkE1B,2BACEC,MAAOpC,EACPqC,SAAU,SAAC1B,GAAD,OAAOV,EAAWU,EAAE2B,OAAOF,QACrCG,YAAY,oCAEd,4BAAQC,KAAK,UAAb,cAGDtC,GAAc,kBAACP,EAAD,KAAQO,GAEvB,kBAACL,EAAD,KACGY,EAAagC,KAAI,SAACC,GAAD,OAChB,uBAAGC,IAAKD,EAAWlB,UAAWoB,KAAK,SACjC,yBACEZ,IAAKU,EAAWhB,MAAME,WACtBM,IAAKQ,EAAWhB,MAAMC,QAExB,6BACE,gCAASe,EAAWlB,WACpB,2BAAIkB,EAAWjB,cAEjB,kBAAC,IAAD,CAAgBoB,KAAM,YCpGnBC,EAJe,WAC5B,OAAO,4CCWMC,EATU,WACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWnD,EAAWoD,OAAK,IAC3C,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWH,M,ueCL5BK,kBAAf,IAS8BC,KCCfC,EATO,kBACpB,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCNJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.14d932d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.0b819d63.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Container = styled.div`\n  width: 500;\n  display: flex;\n  align-items: true;\n`;\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  color: #3a3a3a;\n  line-height: 56px;\n  max-width: 450px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 50px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 2px solid #fff;\n    border-right: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: red;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    color: #fff;\n    font-weight: bold;\n\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      color: #cbcbd6;\n      margin-left: auto;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport logo from '../../assets/logo.svg';\nimport api from '../../services/api';\nimport { Error, Form, Repositories, Title } from './styles';\n\ninterface Repository {\n  name?: string;\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst LOCALSTORAGE_KEY = '@GithubExplore:repositories';\nconst NEW_REPO_SUGGESTION = 'alextavella/gostack-typeorm-upload';\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState<string>(NEW_REPO_SUGGESTION);\n\n  const [inputError, setInputError] = useState<string>('');\n\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const repos = localStorage.getItem(LOCALSTORAGE_KEY);\n    return repos ? JSON.parse(repos) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(\n    e: React.FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    e.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do reposit贸rio');\n      return;\n    }\n\n    const repo = repositories.find((r) => r.name === newRepo);\n    if (repo) {\n      const repoIndex = repositories.findIndex((r) => r.name === newRepo);\n      repositories.splice(repoIndex, 1);\n\n      setRepositories([repo, ...repositories]);\n\n      setInputError('');\n      setNewRepo('');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`/repos/${newRepo}`);\n      const {\n        full_name,\n        description,\n        owner: { login, avatar_url },\n      } = response.data;\n\n      const repository = {\n        name: newRepo,\n        full_name,\n        description,\n        owner: { login, avatar_url },\n      };\n\n      setRepositories([repository, ...repositories]);\n      setInputError('');\n    } catch (e) {\n      setInputError('Error ao pesquisar reposit贸rios');\n    } finally {\n      setNewRepo('');\n    }\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"Github Explorer\" />\n      <Title>Explorer resposit贸rios no Github</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do reposit贸rio\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href=\"teste\">\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Respository: React.FC = () => {\n  return <h1>Respository</h1>;\n};\n\nexport default Respository;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from '../pages/Dashboard';\nimport Respository from '../pages/Repository';\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} exact />\n      <Route path=\"/repository\" component={Respository} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport bg from '../assets/bg.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${bg}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}